[project]
name = "mantra"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.4",
    "arrow>=1.3.0",
    "asyncpg>=0.30.0",
    "fastapi[standard]>=0.116.1",
    "httpx[http2]>=0.28.1",
    "psycopg[binary]>=3.2.9",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pyjwt>=2.10.1",
    "sqlalchemy[asyncio]>=2.0.42",
]

[dependency-groups]
linter = [
    "ruff>=0.12.8",
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
]


[tool.ruff]
include = ["pyproject.toml", "src/**/*.py", "tests/**/*.py"]
exclude = ["*.pyi"]
line-length = 120
indent-width = 4
target-version = "py313"
src=["src"]

[tool.ruff.lint]
# Only Enable the following rules due to we have isort and black to handle the rest.
select = ["E", "F", "W", "N", "I", "UP", "YTT", "PT", "FAST", "LOG", "G"]
ignore = ["E203"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Exclude __init__.py
exclude = ["__init__.py"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.pycodestyle]
max-line-length = 250

[tool.pytest.ini_options]
addopts = "-v -s --tb=long"
pythonpath = ["src"]
asyncio_mode = "auto"
